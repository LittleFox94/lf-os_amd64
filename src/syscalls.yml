groups:
- number: 0
  name:  scheduler
  desc:  Syscalls changing the scheduling of the calling process.
  syscalls:
  - number: 0
    name:  exit
    desc:  Exit the process, free all memory and deliver exit code to parent process. This syscall will never return.
    parameters:
    - name: exit_code
      desc: Code returned from the calling process to the parent process
      type: uint8_t
      reg:  rax

  - number: 1
    name:   clone
    desc:   Clone the process into a new process while optionally sharing all memory (which is commonly called a thread then).
    parameters:
    - name: share_memory
      desc: Share memory with original process
      type: bool
      reg:  rax
    - name: entry
      desc: |
        Entrypoint of the child. Special case: NULL, will continue at the same code location (only valid if share_memory == 1)
      type: void*
      reg:  rdi
    returns:
    - name: pid
      desc: PID of the new process in the old process, 0 in the new process, -1 denotes an error
      type: pid_t
      reg:  rax

  - number: 2
    name:  yield
    desc:  Yield, scheduler another process

- number: 1
  name:   memory
  desc:   Syscalls affecting memory mappings for this or other processes
  syscalls:
  - number: 0
    name:   sbrk
    desc:   Increment the data segment by inc bytes and return the new end of the data segment.
    parameters:
    - name: inc
      desc: Minimum number of bytes to add the data segment
      type: int64_t
      reg:  rax
    returns:
    - name: data_end
      type: void*
      reg:  rax
      desc: Pointer to the last byte in the data segment

- number: 2
  name:   hardware
  desc:   Various syscalls to access hardware resources
  syscalls:
  - number: 0
    name:   framebuffer
    desc:   Take control of the framebuffer (if still in control by kernel)
    returns:
    - name: framebuffer
      type: uint32_t*
      reg:  rax
      desc: Pointer to the framebuffer
    - name: width
      type: uint16_t
      reg:  rdi
      desc: Width of the framebuffer
    - name: height
      type: uint16_t
      reg:  rdi
      desc: Height of the framebuffer
    - name: stride
      type: uint16_t
      reg:  rdi
      desc: Stride (number of bytes per pixel row) of the framebuffer
    - name: colorFormat
      type: uint16_t
      reg:  rdi
      desc: TBD

- number: 3
  name:   locking
  desc:   Mutexes, Semaphores, and co
  syscalls:
  - number: 0
    name:   create_mutex
    desc:   This syscall creates a new mutex
    returns:
    - name: mutex
      desc: pthread_mutex_t value for the new mutex
      type: uint64_t
      reg:  rax
    - name: error
      desc: error code, zero if success
      type: uint64_t
      reg:  rdi
  - number: 1
    name:   destroy_mutex
    desc:   destroys the given mutex, returns an error if locked
    parameters:
    - name: mutex
      desc: mutex to destroy as pthread_mutex_t
      type: uint64_t
      reg:  rax
    returns:
    - name: error
      desc: error code, zero if success
      type: uint64_t
      reg:  rdi
  - number: 2
    name:   lock_mutex
    desc:   Waits for the mutex to be free and locks it or tries to lock it without blocking
    parameters:
    - name: mutex
      desc: mutex to lock as pthread_mutex_t
      type: uint64_t
      reg:  rax
    - name: trylock
      desc: Try to lock instead of block
      type: bool
      reg:  rdi
    returns:
    - name: error
      desc: error of this operation, zero if success
      type: uint64_t
      reg:  rax
  - number: 3
    name:   unlock_mutex
    desc:   Unlocks a mutex
    parameters:
    - name: mutex
      desc: mutex to lock as pthread_mutex_t
      type: uint64_t
      reg:  rax
    returns:
    - name: error
      desc: error of this operation, zero if success
      type: uint64_t
      reg:  rax
  - number: 4
    name:   create_condvar
    desc:   Create a new condvar processes can wait on
    returns:
    - name: condvar
      desc: pthread_cond_t value for the new condvar
      type: uint64_t
      reg:  rax
    - name: error
      desc: error code, zero if success
      type: uint64_t
      reg:  rdi
  - number: 5
    name:   destroy_condvar
    desc:   Destroys a given condvar. Errors if processes are waiting on it
    parameters:
    - name: condvar
      desc: pthread_cond_t value to destroy
      type: uint64_t
      reg:  rax
    returns:
    - name: error
      desc: error code, zero if success
      type: uint64_t
      reg:  rdi
  - number: 6
    name:   signal_condvar
    desc:   Signals a condvar to unlock up to amount processes
    parameters:
    - name: condvar
      desc: condvar to signal
      type: uint64_t
      reg:  rax
    - name: amount
      desc: maximum amount of processes to unlock
      type: uint64_t
      reg:  rdi
    returns:
    - name: error
      desc: error code, zero if success
      type: uint64_t
      reg:  rdi
  - number: 7
    name:   wait_condvar
    desc:   Makes the calling process blocking wait on the condvar
    parameters:
    - name: condvar
      desc: condvar to wait on
      type: uint64_t
      reg:  rax
    - name: timeout
      desc: Wait timeout, not yet implemented
      type: uint64_t
      reg:  rdi
    returns:
    - name: error
      desc: error code, zero if success
      type: uint64_t
      reg:  rdi

- number: 255
  name:   debug
  desc:   Debugging syscalls (simple text output, logging, ...)
  syscalls:
  - number: 0
    name:   print
    desc:   Print a message to the screen at a location defined by the kernel
    parameters:
    - name: str
      desc: Message to print
      type: char*
      reg:  rax
